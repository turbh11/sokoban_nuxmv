#####################
#### nuxmv command: nuXmv.exe -bmc -bmc_length 80 xsb_file08_1.smv ####
#### Execution time: 0.11799979209899902 seconds = 0:00:00.118000 ######
#### the solution steps are: L (1 steps) ####
#################


*** This is nuXmv 2.0.0 (compiled on Mon Oct 14 18:05:39 2019)
*** Copyright (c) 2014-2019, Fondazione Bruno Kessler
*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2019, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2019 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2019 by University of Trento and others
*** See http://mathsat.fbk.eu

-- no counterexample found with bound 0
-- no counterexample found with bound 1
-- specification !( F solve)    is false
-- as demonstrated by the following execution sequence
Trace Description: BMC Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    board[0][0] = "wall"
    board[0][1] = "wall"
    board[0][2] = "wall"
    board[0][3] = "wall"
    board[0][4] = "wall"
    board[0][5] = "wall"
    board[0][6] = "wall"
    board[0][7] = "wall"
    board[0][8] = "wall"
    board[0][9] = "wall"
    board[1][0] = "wall"
    board[1][1] = "wall"
    board[1][2] = "wall"
    board[1][3] = "floor"
    board[1][4] = "floor"
    board[1][5] = "floor"
    board[1][6] = "floor"
    board[1][7] = "wall"
    board[1][8] = "wall"
    board[1][9] = "wall"
    board[2][0] = "wall"
    board[2][1] = "wall"
    board[2][2] = "wall"
    board[2][3] = "floor"
    board[2][4] = "floor"
    board[2][5] = "floor"
    board[2][6] = "floor"
    board[2][7] = "floor"
    board[2][8] = "floor"
    board[2][9] = "wall"
    board[3][0] = "wall"
    board[3][1] = "wall"
    board[3][2] = "wall"
    board[3][3] = "floor"
    board[3][4] = "box"
    board[3][5] = "box"
    board[3][6] = "wall"
    board[3][7] = "wall"
    board[3][8] = "floor"
    board[3][9] = "wall"
    board[4][0] = "wall"
    board[4][1] = "goal"
    board[4][2] = "box_on_goal"
    board[4][3] = "warehouse_keeper_on_goal"
    board[4][4] = "floor"
    board[4][5] = "floor"
    board[4][6] = "floor"
    board[4][7] = "floor"
    board[4][8] = "floor"
    board[4][9] = "wall"
    board[5][0] = "wall"
    board[5][1] = "goal"
    board[5][2] = "goal"
    board[5][3] = "box_on_goal"
    board[5][4] = "floor"
    board[5][5] = "wall"
    board[5][6] = "box"
    board[5][7] = "floor"
    board[5][8] = "wall"
    board[5][9] = "wall"
    board[6][0] = "wall"
    board[6][1] = "wall"
    board[6][2] = "wall"
    board[6][3] = "wall"
    board[6][4] = "floor"
    board[6][5] = "wall"
    board[6][6] = "floor"
    board[6][7] = "box"
    board[6][8] = "floor"
    board[6][9] = "wall"
    board[7][0] = "wall"
    board[7][1] = "wall"
    board[7][2] = "wall"
    board[7][3] = "wall"
    board[7][4] = "floor"
    board[7][5] = "floor"
    board[7][6] = "floor"
    board[7][7] = "floor"
    board[7][8] = "floor"
    board[7][9] = "wall"
    board[8][0] = "wall"
    board[8][1] = "wall"
    board[8][2] = "wall"
    board[8][3] = "wall"
    board[8][4] = "wall"
    board[8][5] = "wall"
    board[8][6] = "wall"
    board[8][7] = "wall"
    board[8][8] = "wall"
    board[8][9] = "wall"
    shift = 0
    count_of_box_on_goals = 17
    solve = FALSE
    goal6 = 7
    goal5 = 0
    goal4 = 0
    goal3 = 0
    goal2 = 10
    goal1 = 0
    L_able[7][8] = TRUE
    U_able[7][8] = TRUE
    L_able[7][7] = TRUE
    R_able[7][7] = TRUE
    U_able[7][7] = TRUE
    L_able[7][6] = TRUE
    R_able[7][6] = TRUE
    U_able[7][6] = TRUE
    L_able[7][5] = TRUE
    R_able[7][5] = TRUE
    R_able[7][4] = TRUE
    U_able[7][4] = TRUE
    L_able[6][8] = TRUE
    D_able[6][8] = TRUE
    L_able[6][7] = TRUE
    R_able[6][7] = TRUE
    D_able[6][7] = TRUE
    U_able[6][7] = TRUE
    R_able[6][6] = TRUE
    D_able[6][6] = TRUE
    U_able[6][6] = TRUE
    D_able[6][4] = TRUE
    U_able[6][4] = TRUE
    L_able[5][7] = FALSE
    D_able[5][7] = TRUE
    U_able[5][7] = TRUE
    R_able[5][6] = TRUE
    D_able[5][6] = TRUE
    U_able[5][6] = TRUE
    L_able[5][4] = TRUE
    D_able[5][4] = TRUE
    U_able[5][4] = TRUE
    L_able[5][3] = TRUE
    R_able[5][3] = TRUE
    U_able[5][3] = FALSE
    L_able[5][2] = TRUE
    R_able[5][2] = TRUE
    U_able[5][2] = FALSE
    R_able[5][1] = TRUE
    U_able[5][1] = TRUE
    L_able[4][8] = TRUE
    U_able[4][8] = TRUE
    L_able[4][7] = TRUE
    R_able[4][7] = TRUE
    D_able[4][7] = TRUE
    L_able[4][6] = TRUE
    R_able[4][6] = TRUE
    D_able[4][6] = TRUE
    L_able[4][5] = TRUE
    R_able[4][5] = TRUE
    U_able[4][5] = TRUE
    L_able[4][4] = FALSE
    R_able[4][4] = TRUE
    D_able[4][4] = TRUE
    U_able[4][4] = TRUE
    L_able[4][3] = TRUE
    R_able[4][3] = TRUE
    D_able[4][3] = FALSE
    U_able[4][3] = TRUE
    L_able[4][2] = TRUE
    R_able[4][2] = FALSE
    D_able[4][2] = TRUE
    R_able[4][1] = FALSE
    D_able[4][1] = TRUE
    D_able[3][8] = TRUE
    U_able[3][8] = TRUE
    L_able[3][5] = TRUE
    D_able[3][5] = TRUE
    U_able[3][5] = TRUE
    L_able[3][4] = TRUE
    R_able[3][4] = FALSE
    D_able[3][4] = TRUE
    U_able[3][4] = TRUE
    R_able[3][3] = FALSE
    D_able[3][3] = FALSE
    U_able[3][3] = TRUE
    L_able[2][8] = TRUE
    D_able[2][8] = TRUE
    L_able[2][7] = TRUE
    R_able[2][7] = TRUE
    L_able[2][6] = TRUE
    R_able[2][6] = TRUE
    U_able[2][6] = TRUE
    L_able[2][5] = TRUE
    R_able[2][5] = TRUE
    D_able[2][5] = TRUE
    U_able[2][5] = TRUE
    L_able[2][4] = TRUE
    R_able[2][4] = TRUE
    D_able[2][4] = TRUE
    U_able[2][4] = TRUE
    R_able[2][3] = TRUE
    D_able[2][3] = TRUE
    U_able[2][3] = TRUE
    L_able[1][6] = TRUE
    D_able[1][6] = TRUE
    L_able[1][5] = TRUE
    R_able[1][5] = TRUE
    D_able[1][5] = TRUE
    L_able[1][4] = TRUE
    R_able[1][4] = TRUE
    D_able[1][4] = TRUE
    R_able[1][3] = TRUE
    D_able[1][3] = TRUE
  -- Loop starts here
  -> State: 1.2 <-
    board[4][1] = "box_on_goal"
    board[4][2] = "warehouse_keeper_on_goal"
    board[4][3] = "goal"
    shift = "L"
    count_of_box_on_goals = 0
    solve = TRUE
    goal2 = 0
    goal1 = 12
    U_able[5][3] = TRUE
    U_able[5][1] = FALSE
    L_able[4][4] = TRUE
    L_able[4][3] = FALSE
    L_able[4][2] = FALSE
    R_able[4][2] = TRUE
    D_able[3][3] = TRUE
  -> State: 1.3 <-

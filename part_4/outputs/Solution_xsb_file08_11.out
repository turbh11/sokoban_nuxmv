#####################
#### nuxmv command: nuXmv.exe xsb_file08_11.smv ####
#### Execution time: 55.320966482162476 seconds = 0:00:55.320966 ######
#### the solution steps are: R D D D R R R R U L D L U U R U L L L (19 steps) ####
#################
The total solution took 12 iterations
Iteration 1 took 0.1119999885559082 
The steps for iteration 1 are: ['L']
Iteration 2 took 0.11799979209899902 
The steps for iteration 2 are: ['L']
Iteration 3 took 0.33300304412841797 
The steps for iteration 3 are: ['R', 'R', 'D', 'L']
Iteration 4 took 0.13299798965454102 
The steps for iteration 4 are: ['L']
Iteration 5 took 1.9710009098052979 
The steps for iteration 5 are: ['R', 'R', 'U', 'R', 'U', 'L', 'U', 'L', 'D']
Iteration 6 took 0.17499661445617676 
The steps for iteration 6 are: ['D']
Iteration 7 took 0.24899768829345703 
The steps for iteration 7 are: ['R', 'D', 'L']
Iteration 8 took 5.118697166442871 
The steps for iteration 8 are: ['R', 'D', 'D', 'R', 'R', 'U', 'U', 'R', 'U', 'L', 'L', 'L']
Iteration 9 took 0.15399622917175293 
The steps for iteration 9 are: ['L']
Iteration 10 took 13.066975593566895 
The steps for iteration 10 are: ['U', 'U', 'R', 'U', 'R', 'R', 'D', 'L', 'L', 'U', 'L', 'D', 'D']
Iteration 11 took 0.2175445556640625 
The steps for iteration 11 are: ['D']
Iteration 12 took 55.320966482162476 
The steps for iteration 12 are: ['R', 'D', 'D', 'D', 'R', 'R', 'R', 'R', 'U', 'L', 'D', 'L', 'U', 'U', 'R', 'U', 'L', 'L', 'L']
#################
#####Summary####
The total time for all iterations is: 76.96917605400085 seconds = 0:01:16.969176
The total steps for all iterations are: L L R R D L L R R U R U L U L D D R D L R D D R R U U R U L L L L U U R U R R D L L U L D D D R D D D R R R R U L D L U U R U L L L  (66) steps
#################


*** This is nuXmv 2.0.0 (compiled on Mon Oct 14 18:05:39 2019)
*** Copyright (c) 2014-2019, Fondazione Bruno Kessler
*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2019, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2019 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2019 by University of Trento and others
*** See http://mathsat.fbk.eu

-- specification !( F solve)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    board[0][0] = "wall"
    board[0][1] = "wall"
    board[0][2] = "wall"
    board[0][3] = "wall"
    board[0][4] = "wall"
    board[0][5] = "wall"
    board[0][6] = "wall"
    board[0][7] = "wall"
    board[0][8] = "wall"
    board[0][9] = "wall"
    board[1][0] = "wall"
    board[1][1] = "wall"
    board[1][2] = "wall"
    board[1][3] = "floor"
    board[1][4] = "floor"
    board[1][5] = "floor"
    board[1][6] = "floor"
    board[1][7] = "wall"
    board[1][8] = "wall"
    board[1][9] = "wall"
    board[2][0] = "wall"
    board[2][1] = "wall"
    board[2][2] = "wall"
    board[2][3] = "floor"
    board[2][4] = "floor"
    board[2][5] = "floor"
    board[2][6] = "floor"
    board[2][7] = "floor"
    board[2][8] = "floor"
    board[2][9] = "wall"
    board[3][0] = "wall"
    board[3][1] = "wall"
    board[3][2] = "wall"
    board[3][3] = "floor"
    board[3][4] = "floor"
    board[3][5] = "floor"
    board[3][6] = "wall"
    board[3][7] = "wall"
    board[3][8] = "floor"
    board[3][9] = "wall"
    board[4][0] = "wall"
    board[4][1] = "box_on_goal"
    board[4][2] = "box_on_goal"
    board[4][3] = "warehouse_keeper_on_goal"
    board[4][4] = "floor"
    board[4][5] = "floor"
    board[4][6] = "floor"
    board[4][7] = "floor"
    board[4][8] = "floor"
    board[4][9] = "wall"
    board[5][0] = "wall"
    board[5][1] = "box_on_goal"
    board[5][2] = "box_on_goal"
    board[5][3] = "box_on_goal"
    board[5][4] = "floor"
    board[5][5] = "wall"
    board[5][6] = "floor"
    board[5][7] = "floor"
    board[5][8] = "wall"
    board[5][9] = "wall"
    board[6][0] = "wall"
    board[6][1] = "wall"
    board[6][2] = "wall"
    board[6][3] = "wall"
    board[6][4] = "floor"
    board[6][5] = "wall"
    board[6][6] = "floor"
    board[6][7] = "box"
    board[6][8] = "floor"
    board[6][9] = "wall"
    board[7][0] = "wall"
    board[7][1] = "wall"
    board[7][2] = "wall"
    board[7][3] = "wall"
    board[7][4] = "floor"
    board[7][5] = "floor"
    board[7][6] = "floor"
    board[7][7] = "floor"
    board[7][8] = "floor"
    board[7][9] = "wall"
    board[8][0] = "wall"
    board[8][1] = "wall"
    board[8][2] = "wall"
    board[8][3] = "wall"
    board[8][4] = "wall"
    board[8][5] = "wall"
    board[8][6] = "wall"
    board[8][7] = "wall"
    board[8][8] = "wall"
    board[8][9] = "wall"
    shift = 0
    count_of_box_on_goals = 51
    solve = FALSE
    goal6 = 7
    goal5 = 10
    goal4 = 12
    goal3 = 0
    goal2 = 10
    goal1 = 12
    L_able[7][8] = TRUE
    U_able[7][8] = TRUE
    L_able[7][7] = TRUE
    R_able[7][7] = TRUE
    U_able[7][7] = TRUE
    L_able[7][6] = TRUE
    R_able[7][6] = TRUE
    U_able[7][6] = TRUE
    L_able[7][5] = TRUE
    R_able[7][5] = TRUE
    R_able[7][4] = TRUE
    U_able[7][4] = TRUE
    L_able[6][8] = TRUE
    D_able[6][8] = TRUE
    L_able[6][7] = TRUE
    R_able[6][7] = TRUE
    D_able[6][7] = TRUE
    U_able[6][7] = TRUE
    R_able[6][6] = TRUE
    D_able[6][6] = TRUE
    U_able[6][6] = TRUE
    D_able[6][4] = TRUE
    U_able[6][4] = TRUE
    L_able[5][7] = TRUE
    D_able[5][7] = TRUE
    U_able[5][7] = TRUE
    R_able[5][6] = TRUE
    D_able[5][6] = TRUE
    U_able[5][6] = TRUE
    L_able[5][4] = FALSE
    D_able[5][4] = TRUE
    U_able[5][4] = TRUE
    L_able[5][3] = FALSE
    R_able[5][3] = TRUE
    U_able[5][3] = FALSE
    L_able[5][2] = FALSE
    R_able[5][2] = TRUE
    U_able[5][2] = FALSE
    R_able[5][1] = FALSE
    U_able[5][1] = FALSE
    L_able[4][8] = TRUE
    U_able[4][8] = TRUE
    L_able[4][7] = TRUE
    R_able[4][7] = TRUE
    D_able[4][7] = TRUE
    L_able[4][6] = TRUE
    R_able[4][6] = TRUE
    D_able[4][6] = TRUE
    L_able[4][5] = TRUE
    R_able[4][5] = TRUE
    U_able[4][5] = TRUE
    L_able[4][4] = FALSE
    R_able[4][4] = TRUE
    D_able[4][4] = TRUE
    U_able[4][4] = TRUE
    L_able[4][3] = FALSE
    R_able[4][3] = TRUE
    D_able[4][3] = FALSE
    U_able[4][3] = TRUE
    L_able[4][2] = FALSE
    R_able[4][2] = FALSE
    D_able[4][2] = FALSE
    R_able[4][1] = FALSE
    D_able[4][1] = FALSE
    D_able[3][8] = TRUE
    U_able[3][8] = TRUE
    L_able[3][5] = TRUE
    D_able[3][5] = TRUE
    U_able[3][5] = TRUE
    L_able[3][4] = TRUE
    R_able[3][4] = TRUE
    D_able[3][4] = TRUE
    U_able[3][4] = TRUE
    R_able[3][3] = TRUE
    D_able[3][3] = FALSE
    U_able[3][3] = TRUE
    L_able[2][8] = TRUE
    D_able[2][8] = TRUE
    L_able[2][7] = TRUE
    R_able[2][7] = TRUE
    L_able[2][6] = TRUE
    R_able[2][6] = TRUE
    U_able[2][6] = TRUE
    L_able[2][5] = TRUE
    R_able[2][5] = TRUE
    D_able[2][5] = TRUE
    U_able[2][5] = TRUE
    L_able[2][4] = TRUE
    R_able[2][4] = TRUE
    D_able[2][4] = TRUE
    U_able[2][4] = TRUE
    R_able[2][3] = TRUE
    D_able[2][3] = TRUE
    U_able[2][3] = TRUE
    L_able[1][6] = TRUE
    D_able[1][6] = TRUE
    L_able[1][5] = TRUE
    R_able[1][5] = TRUE
    D_able[1][5] = TRUE
    L_able[1][4] = TRUE
    R_able[1][4] = TRUE
    D_able[1][4] = TRUE
    R_able[1][3] = TRUE
    D_able[1][3] = TRUE
  -> State: 1.2 <-
    board[4][3] = "goal"
    board[4][4] = "warehouse_keeper"
    shift = "R"
    count_of_box_on_goals = 0
    U_able[5][4] = FALSE
    U_able[5][3] = TRUE
    L_able[4][5] = FALSE
    L_able[4][4] = TRUE
    R_able[4][3] = FALSE
    R_able[4][2] = TRUE
    R_able[4][1] = TRUE
    D_able[3][4] = FALSE
    D_able[3][3] = TRUE
  -> State: 1.3 <-
    board[4][4] = "floor"
    board[5][4] = "warehouse_keeper"
    shift = "D"
    U_able[6][4] = FALSE
    U_able[5][4] = TRUE
    R_able[5][3] = FALSE
    R_able[5][2] = FALSE
    L_able[4][5] = TRUE
    D_able[4][4] = FALSE
    R_able[4][3] = TRUE
    D_able[3][4] = TRUE
  -> State: 1.4 <-
    board[5][4] = "floor"
    board[6][4] = "warehouse_keeper"
    U_able[7][4] = FALSE
    U_able[6][4] = TRUE
    D_able[5][4] = FALSE
    R_able[5][3] = TRUE
    R_able[5][2] = TRUE
    D_able[4][4] = TRUE
  -> State: 1.5 <-
    board[6][4] = "floor"
    board[7][4] = "warehouse_keeper"
    L_able[7][5] = FALSE
    U_able[7][4] = TRUE
    D_able[6][4] = FALSE
    D_able[5][4] = TRUE
  -> State: 1.6 <-
    board[7][4] = "floor"
    board[7][5] = "warehouse_keeper"
    shift = "R"
    L_able[7][6] = FALSE
    L_able[7][5] = TRUE
    R_able[7][4] = FALSE
    D_able[6][4] = TRUE
  -> State: 1.7 <-
    board[7][5] = "floor"
    board[7][6] = "warehouse_keeper"
    L_able[7][7] = FALSE
    L_able[7][6] = TRUE
    R_able[7][5] = FALSE
    R_able[7][4] = TRUE
    D_able[6][6] = FALSE
  -> State: 1.8 <-
    board[7][6] = "floor"
    board[7][7] = "warehouse_keeper"
    L_able[7][8] = FALSE
    L_able[7][7] = TRUE
    R_able[7][6] = FALSE
    R_able[7][5] = TRUE
    D_able[6][7] = FALSE
    D_able[6][6] = TRUE
    D_able[5][7] = FALSE
  -> State: 1.9 <-
    board[7][7] = "floor"
    board[7][8] = "warehouse_keeper"
    L_able[7][8] = TRUE
    R_able[7][7] = FALSE
    R_able[7][6] = TRUE
    D_able[6][8] = FALSE
    D_able[6][7] = TRUE
    D_able[5][7] = TRUE
  -> State: 1.10 <-
    board[6][8] = "warehouse_keeper"
    board[7][8] = "floor"
    shift = "U"
    U_able[7][8] = FALSE
    R_able[7][7] = TRUE
    D_able[6][8] = TRUE
    R_able[6][7] = FALSE
    R_able[6][6] = FALSE
  -> State: 1.11 <-
    board[6][6] = "box"
    board[6][7] = "warehouse_keeper"
    board[6][8] = "floor"
    shift = "L"
    U_able[7][8] = TRUE
    U_able[7][7] = FALSE
    L_able[6][8] = FALSE
    L_able[6][7] = FALSE
    R_able[6][7] = TRUE
    D_able[5][7] = FALSE
  -> State: 1.12 <-
    board[6][7] = "floor"
    board[7][7] = "warehouse_keeper"
    shift = "D"
    L_able[7][8] = FALSE
    U_able[7][7] = TRUE
    R_able[7][6] = FALSE
    L_able[6][8] = TRUE
    D_able[6][7] = FALSE
    R_able[6][6] = TRUE
    D_able[5][7] = TRUE
  -> State: 1.13 <-
    board[7][6] = "warehouse_keeper"
    board[7][7] = "floor"
    shift = "L"
    L_able[7][8] = TRUE
    L_able[7][7] = FALSE
    R_able[7][6] = TRUE
    R_able[7][5] = FALSE
    D_able[6][7] = TRUE
    D_able[6][6] = FALSE
    D_able[5][6] = FALSE
  -> State: 1.14 <-
    board[5][6] = "box"
    board[6][6] = "warehouse_keeper"
    board[7][6] = "floor"
    shift = "U"
    L_able[7][7] = TRUE
    U_able[7][6] = FALSE
    R_able[7][5] = TRUE
    D_able[6][6] = TRUE
    L_able[5][7] = FALSE
    D_able[4][6] = FALSE
  -> State: 1.15 <-
    board[4][6] = "box"
    board[5][6] = "warehouse_keeper"
    board[6][6] = "floor"
    U_able[7][6] = TRUE
    L_able[6][7] = TRUE
    U_able[6][6] = FALSE
    D_able[5][6] = TRUE
    U_able[5][6] = FALSE
  -> State: 1.16 <-
    board[5][6] = "floor"
    board[5][7] = "warehouse_keeper"
    shift = "R"
    U_able[6][7] = FALSE
    U_able[6][6] = TRUE
    L_able[5][7] = TRUE
    R_able[5][6] = FALSE
    D_able[4][7] = FALSE
    D_able[4][6] = TRUE
  -> State: 1.17 <-
    board[4][7] = "warehouse_keeper"
    board[5][7] = "floor"
    shift = "U"
    U_able[6][7] = TRUE
    U_able[5][7] = FALSE
    R_able[5][6] = TRUE
    L_able[4][8] = FALSE
    D_able[4][7] = TRUE
    R_able[4][6] = FALSE
    R_able[4][5] = FALSE
  -> State: 1.18 <-
    board[4][5] = "box"
    board[4][6] = "warehouse_keeper"
    board[4][7] = "floor"
    shift = "L"
    U_able[5][7] = TRUE
    L_able[4][8] = TRUE
    L_able[4][7] = FALSE
    R_able[4][6] = TRUE
    R_able[4][4] = FALSE
    D_able[3][5] = FALSE
  -> State: 1.19 <-
    board[4][4] = "box"
    board[4][5] = "warehouse_keeper"
    board[4][6] = "floor"
    U_able[5][6] = TRUE
    L_able[4][7] = TRUE
    L_able[4][6] = FALSE
    R_able[4][5] = TRUE
    R_able[4][3] = FALSE
  -> State: 1.20 <-
    board[4][3] = "box_on_goal"
    board[4][4] = "warehouse_keeper"
    board[4][5] = "floor"
    solve = TRUE
    goal3 = 1
    U_able[5][4] = FALSE
    L_able[4][6] = TRUE
    L_able[4][5] = FALSE
    L_able[4][4] = FALSE
    R_able[4][4] = TRUE
    R_able[4][2] = FALSE
    R_able[4][1] = FALSE
    D_able[3][5] = TRUE
    D_able[3][4] = FALSE
    D_able[3][3] = FALSE
  -- Loop starts here
  -> State: 1.21 <-
    board[4][4] = "floor"
    board[5][4] = "warehouse_keeper"
    shift = "D"
    U_able[6][4] = FALSE
    U_able[5][4] = TRUE
    R_able[5][3] = FALSE
    R_able[5][2] = FALSE
    L_able[4][5] = TRUE
    D_able[4][4] = FALSE
    R_able[4][3] = TRUE
    R_able[4][2] = TRUE
    D_able[3][4] = TRUE
  -> State: 1.22 <-
    board[4][4] = "warehouse_keeper"
    board[5][4] = "floor"
    shift = "U"
    U_able[6][4] = TRUE
    U_able[5][4] = FALSE
    R_able[5][3] = TRUE
    R_able[5][2] = TRUE
    L_able[4][5] = FALSE
    D_able[4][4] = TRUE
    R_able[4][3] = FALSE
    R_able[4][2] = FALSE
    D_able[3][4] = FALSE
  -> State: 1.23 <-
    board[4][4] = "floor"
    board[5][4] = "warehouse_keeper"
    shift = "D"
    U_able[6][4] = FALSE
    U_able[5][4] = TRUE
    R_able[5][3] = FALSE
    R_able[5][2] = FALSE
    L_able[4][5] = TRUE
    D_able[4][4] = FALSE
    R_able[4][3] = TRUE
    R_able[4][2] = TRUE
    D_able[3][4] = TRUE
